<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.albina</groupId>
	<artifactId>albina</artifactId>
	<version>0.1</version>
	<packaging>${packaging}</packaging>

	<parent>
		<groupId>io.micronaut.platform</groupId>
		<artifactId>micronaut-parent</artifactId>
		<version>4.9.2</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<packaging>jar</packaging>
		<maven.compiler.release>21</maven.compiler.release>
		<jdk.version>21</jdk.version>
		<release.version>21</release.version>
		<jersey.version>2.40</jersey.version>
		<slf4j.version>2.0.17</slf4j.version>
		<hibernate.version>6.6.2.Final</hibernate.version>
		<liquibase.version>4.30.0</liquibase.version>
		<itextpdf.version>7.2.6</itextpdf.version>
		<micronaut.version>4.9.2</micronaut.version>
		<micronaut.runtime>tomcat</micronaut.runtime>
		<micronaut.aot.enabled>false</micronaut.aot.enabled>
		<micronaut.aot.packageName>eu.albina.aot.generated</micronaut.aot.packageName>
		<exec.mainClass>eu.albina.Application</exec.mainClass>
	</properties>

	<profiles>
		<profile>
			<id>env-local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<hibernate.connection.url>jdbc:mariadb://localhost:3306/albina_dev?useSSL=false&amp;amp;useUnicode=true&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=UTC</hibernate.connection.url>
				<hibernate.connection.username>ais</hibernate.connection.username>
				<hibernate.connection.password>MD>5:X*n%)1V</hibernate.connection.password>
				<hibernate.show-sql>false</hibernate.show-sql>
				<hibernate.hikari.minimumIdle>10</hibernate.hikari.minimumIdle>
				<hibernate.hikari.maximumPoolSize>20</hibernate.hikari.maximumPoolSize>
				<albina.conf.git.version>SNAPSHOT</albina.conf.git.version>
				<albina.log.prefix>LOCAL</albina.log.prefix>
				<albina.log.level>DEBUG</albina.log.level>
				<albina.log.level.c3p0>ERROR</albina.log.level.c3p0>
				<albina.log.level.sql>INFO</albina.log.level.sql>
				<albina.log.filepath>/opt/local/logs/</albina.log.filepath>
				<albina.log.filename>albina_local.log</albina.log.filename>
				<albina.log.dest>stdout</albina.log.dest>
			</properties>
		</profile>
		<profile>
			<id>env-dev</id>
			<properties>
				<hibernate.connection.url>jdbc:mariadb://localhost:3306/albina_dev?useSSL=false&amp;amp;useUnicode=true&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=UTC</hibernate.connection.url>
				<hibernate.connection.username>ais</hibernate.connection.username>
				<hibernate.connection.password>MD>5:X*n%)1V</hibernate.connection.password>
				<hibernate.show-sql>false</hibernate.show-sql>
				<hibernate.hikari.minimumIdle>10</hibernate.hikari.minimumIdle>
				<hibernate.hikari.maximumPoolSize>50</hibernate.hikari.maximumPoolSize>
				<albina.conf.git.version>${env.GIT_VERSION}</albina.conf.git.version>
				<albina.log.prefix>DEV</albina.log.prefix>
				<albina.log.level>DEBUG</albina.log.level>
				<albina.log.level.c3p0>WARN</albina.log.level.c3p0>
				<albina.log.level.sql>ERROR</albina.log.level.sql>
				<albina.log.filepath>/opt/tomcat/logs/</albina.log.filepath>
				<albina.log.filename>albina_dev.log</albina.log.filename>
				<albina.log.dest>file</albina.log.dest>
			</properties>
		</profile>
		<profile>
			<id>env-prod</id>
			<properties>
				<hibernate.connection.url>jdbc:mariadb://localhost:3306/albina?useSSL=false&amp;amp;useUnicode=true&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=UTC</hibernate.connection.url>
				<hibernate.connection.username>ais</hibernate.connection.username>
				<hibernate.connection.password>MD>5:X*n%)1V</hibernate.connection.password>
				<hibernate.show-sql>false</hibernate.show-sql>
				<hibernate.hikari.minimumIdle>20</hibernate.hikari.minimumIdle>
				<hibernate.hikari.maximumPoolSize>100</hibernate.hikari.maximumPoolSize>
				<albina.conf.git.version>${env.GIT_VERSION}</albina.conf.git.version>
				<albina.log.prefix></albina.log.prefix>
				<albina.log.level>INFO</albina.log.level>
				<albina.log.level.c3p0>WARN</albina.log.level.c3p0>
				<albina.log.level.sql>WARN</albina.log.level.sql>
				<albina.log.filepath>/opt/tomcat/logs/</albina.log.filepath>
				<albina.log.filename>albina.log</albina.log.filename>
				<albina.log.dest>file</albina.log.dest>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>3.5.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.github.waffle</groupId>
					<artifactId>waffle-jna</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.10.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit</artifactId>
			<version>4.1.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>33.2.0-jre</version>
		</dependency>

		<dependency>
			<groupId>com.google.auth</groupId>
			<artifactId>google-auth-library-oauth2-http</artifactId>
			<version>1.30.0</version>
		</dependency>

		<!-- timer -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.5.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.mchange</groupId>
					<artifactId>c3p0</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.zaxxer</groupId>
					<artifactId>HikariCP-java7</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- email -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.31</version>
		</dependency>

		<!-- pdf -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>kernel</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>layout</artifactId>
			<version>${itextpdf.version}</version>
		</dependency>

		<!-- authentication -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.4</version>
		</dependency>

		<!-- apache commons-text -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.19.0</version>
		</dependency>

		<dependency>
			<groupId>com.networknt</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>1.5.8</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate6</artifactId>
		</dependency>

		<dependency>
			<groupId>de.grundid.opendatalab</groupId>
			<artifactId>geojson-jackson</artifactId>
			<version>1.14</version>
		</dependency>

		<dependency>
			<groupId>org.mapyrus</groupId>
			<artifactId>mapyrus</artifactId>
			<version>2.106</version>
		</dependency>

		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-jackson-databind</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-websocket</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.data</groupId>
			<artifactId>micronaut-data-hibernate-jpa</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.data</groupId>
			<artifactId>micronaut-data-tx-hibernate</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.liquibase</groupId>
			<artifactId>micronaut-liquibase</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.security</groupId>
			<artifactId>micronaut-security</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.security</groupId>
			<artifactId>micronaut-security-jwt</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.serde</groupId>
			<artifactId>micronaut-serde-jackson</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.servlet</groupId>
			<artifactId>micronaut-http-server-tomcat</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.sql</groupId>
			<artifactId>micronaut-hibernate-jpa</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.sql</groupId>
			<artifactId>micronaut-jdbc-hikari</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.xml</groupId>
			<artifactId>micronaut-jackson-xml</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.openapi</groupId>
			<artifactId>micronaut-openapi-annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-http-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.jaxrs</groupId>
			<artifactId>micronaut-jaxrs-processor</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-inject</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.micronaut.test</groupId>
			<artifactId>micronaut-test-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>io.micronaut.maven</groupId>
				<artifactId>micronaut-maven-plugin</artifactId>
				<version>4.10.2</version>
				<configuration>
					<configFile>aot-${packaging}.properties</configFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.14.1</version>
				<configuration>
					<!-- Uncomment to enable incremental compilation -->
					<!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
					<annotationProcessorPaths combine.self="override">
						<path>
							<groupId>io.micronaut</groupId>
							<artifactId>micronaut-inject-java</artifactId>
							<version>${micronaut.core.version}</version>
						</path>
						<path>
							<groupId>io.micronaut.data</groupId>
							<artifactId>micronaut-data-processor</artifactId>
							<version>${micronaut.data.version}</version>
							<exclusions>
								<exclusion>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject</artifactId>
								</exclusion>
							</exclusions>
						</path>
						<path>
							<groupId>io.micronaut</groupId>
							<artifactId>micronaut-graal</artifactId>
							<version>${micronaut.core.version}</version>
						</path>
						<path>
							<groupId>io.micronaut</groupId>
							<artifactId>micronaut-http-validation</artifactId>
							<version>${micronaut.core.version}</version>
						</path>
						<path>
							<groupId>io.micronaut.jaxrs</groupId>
							<artifactId>micronaut-jaxrs-processor</artifactId>
							<version>${micronaut.jaxrs.version}</version>
							<exclusions>
								<exclusion>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject</artifactId>
								</exclusion>
							</exclusions>
						</path>
						<path>
							<groupId>io.micronaut.openapi</groupId>
							<artifactId>micronaut-openapi</artifactId>
							<version>${micronaut.openapi.version}</version>
							<exclusions>
								<exclusion>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject</artifactId>
								</exclusion>
							</exclusions>
						</path>
						<path>
							<groupId>io.micronaut.serde</groupId>
							<artifactId>micronaut-serde-processor</artifactId>
							<version>${micronaut.serialization.version}</version>
							<exclusions>
								<exclusion>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject</artifactId>
								</exclusion>
							</exclusions>
						</path>
						<path>
							<groupId>io.micronaut.servlet</groupId>
							<artifactId>micronaut-servlet-processor</artifactId>
							<version>${micronaut.servlet.version}</version>
							<exclusions>
								<exclusion>
									<groupId>io.micronaut</groupId>
									<artifactId>micronaut-inject</artifactId>
								</exclusion>
							</exclusions>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amicronaut.processing.group=eu.albina</arg>
						<arg>-Amicronaut.processing.module=albina</arg>
					</compilerArgs>
				</configuration>
			</plugin>

		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources-filtered</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
