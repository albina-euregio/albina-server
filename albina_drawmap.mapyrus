print "========================================="
print "Mapyrus.time.stamp = ", Mapyrus.time.stamp
print "Mapyrus.version    = ", Mapyrus.version
print "-----------------------------------------"
print "Kartenerstelleung ALBINA"
print "-----------------------------------------"

setoutput mapyrus_dir . "mapyrus_log.txt"

# Daten Input (includes)
let inc1 = "include " . mapyrus_dir . "fontdefinition.mapyrus"
eval inc1
let inc2 = "include " . mapyrus_dir . "albina_functions.mapyrus"
eval inc2
let inc3 = "include " . mapyrus_dir . "albina_styles.mapyrus"
eval inc3

# Raster-Input
let raster = geodata_dir . "alpes_srtm250_n_gm_hs_v1.png"

# Shapefile-Input
if level == 1 then
	let country_l = geodata_dir . "simple_geom_staat_l.shp"
	let provinces_l = geodata_dir . "simple_geom_provinzen_l.shp"
	let reg_euregio_ha = geodata_dir . "simple_geom_regionen_euregio_ha.shp"
	let rivers = geodata_dir . "gewaesser_l_gen.shp"
	let lakes = geodata_dir . "gewaesser_a_gen.shp"
else
	let country_l = geodata_dir . "staat_l.shp"
	let provinces_l = geodata_dir . "provinzen_l.shp"
	let reg_euregio_ha = geodata_dir . "regionen_euregio_ha.shp"
	let rivers = geodata_dir . "gewaesser_l.shp"
	let lakes = geodata_dir . "gewaesser_a.shp"
endif

let euregio = geodata_dir . "euregio_a.shp"
if level == 1 then
	let euregio = geodata_dir . "simple_geom_euregio_a.shp"
endif

if region eq "Euregio" then
	let pp_region = geodata_dir . "pp_euregio.shp"
	if level == 1 then
		let pp_region = geodata_dir . "simple_geom_pp_euregio.shp"
	endif
endif

if bulletin_id eq "tyrol" then 
	let pp_region = geodata_dir . "pp_tirol.shp"
elif bulletin_id eq "southtyrol" then 
	let pp_region = geodata_dir . "pp_suedtirol.shp"
elif bulletin_id eq "trentino" then
	let pp_region = geodata_dir . "pp_trentino.shp" 
endif

let cities = geodata_dir . "albina_orte_p.shp" 
let names_p = geodata_dir . "albina_namengut_p.shp" 
let names_l = geodata_dir . "albina_namengut_l.shp" 

# INTERREG-Logo
let interreg_image_file = image_dir . "interrreg_logo.png"
	
	
###################################################################
# --- Define NEWPAGE
# -------------------------------------------------------------
newpage image_type, mapFile, pagesize_x, pagesize_y, extras 
print extras

let px1 = 0
let py1 = 0
let px2 = pagesize_x
let py2 = pagesize_y

# Aufhängungspunkte für Karte 
let mx1 = px1
let my1 = py1
let mx2 = px2
let my2 = py2


###################################################################
# EBENEN
###################################################################
# Raster
if level >= 2 and colormode ne "bw" then
	image_feature raster
endif

# Euregio bei Bulletin Karten
if dynamic_region eq "one" then
	polygon_feature_euregio euregio
endif

# Regionen Lawinengefahrenstufen
polygon_feature_danger_levels reg_euregio_ha, drm_file, level

# Flüsse & Seen
line_feature_rivers rivers, level
polygon_feature_lakes lakes, level
	
# Provinz- und Staatsgrenzen (außerhalb)
line_feature_country country_l, level, 0

# Städte 
point_feature_city_marker cities, level

# Linienlabels
if level >= 2 and dynamic_region eq "all" then
	line_feature_labels names_l, level
endif

# Punktlabels
point_feature_labels names_p, level
	
# Absoftung
polygon_feature_pp pp_region, level

# Provinz- und Staatsgrenzen (innerhalb)
line_feature_provinces provinces_l, level, 1
line_feature_country country_l, level, 1


# Maßstabsleiste
if scalebar eq "on" then
	draw_scalebar scale_km_value, scale_bar_color, scale_bar_style, scale_font, scale_fontsize
endif

# Copyrightinformation
if copyright eq "on" then
	draw_copyright copyright_txt, c_font, c_fontsize, c_fontcolor
endif

# INTERREG-Logo bei Karten
if interreg eq "on" then
	place_interreg_logo
endif

# Rahmen
draw_frame frame_stroke_color, frame_line_style


###############################################################	
###############################################################	
###############################################################	

print "-----------------------------------------"
print "End time = ", Mapyrus.time.stamp
print "-----------------------------------------"

endpage
