print "========================================="
print "Mapyrus.time.stamp = ", Mapyrus.time.stamp
print "Mapyrus.version    = ", Mapyrus.version
print "-----------------------------------------"
print "Kartenerstelleung ALBINA"
print "-----------------------------------------"
print "Gueltiges Kartendatum: " . date
print "Bulletin-ID/Karte: " . bulletin_id
print "######################################################"

# Rasterfile
let raster = geodata_dir . rasterFile

# Shapefile
let country_1 = geodata_dir . countryShapeFile
let provinces_1 = geodata_dir . provincesShapeFile
let reg_euregio_ha = geodata_dir . microRegionsShapeFile
let rivers = geodata_dir . riversShapeFile
let lakes = geodata_dir . lakesShapeFile
let cities = geodata_dir . citiesShapeFile
let peaks = geodata_dir . peaksShapeFile
let names_p = geodata_dir . namesPShapeFile
let names_l = geodata_dir . namesLShapeFile
let euregio = geodata_dir . regionShapeFile
let pp_region = geodata_dir . ppShapeFile

###################################################################
# --- Define NEWPAGE
# -------------------------------------------------------------
newpage image_type, mapFile, pagesize_x, pagesize_y, extras
print extras

let px1 = 0
let py1 = 0
let px2 = pagesize_x
let py2 = pagesize_y

# Aufhängungspunkte für Karte
let mx1 = px1
let my1 = py1
let mx2 = px2
let my2 = py2


###################################################################
# EBENEN
###################################################################
# Raster
if (map_level eq "standard" or map_level eq "overlay") and colormode ne "bw" then
	image_feature raster
endif

# Euregio bei Bulletin Karten
if dynamic_region eq "one" then
	polygon_feature_euregio euregio
endif

# Regionen Lawinengefahrenstufen
polygon_feature_danger_levels reg_euregio_ha

# Flüsse & Seen
line_feature_rivers rivers, level
polygon_feature_lakes lakes, level

# Provinz- und Staatsgrenzen (außerhalb)
line_feature_country country_l, level, 0

# Städte
point_feature_city_marker cities, level

# Linienlabels
if map_level eq "standard" and dynamic_region eq "all" then
	line_feature_labels names_l, level
endif

# Punktlabels
point_feature_labels names_p, level

# Absoftung
polygon_feature_pp pp_region, level

# Provinz- und Staatsgrenzen (innerhalb)
line_feature_provinces provinces_l, level, 1
line_feature_country country_l, level, 1


# Maßstabsleiste
if scalebar eq "on" then
	draw_scalebar scale_km_value, scale_bar_color, scale_bar_style, scale_font, scale_fontsize
endif

# Copyrightinformation
if copyright eq "on" then
	draw_copyright copyright_txt, c_font, c_fontsize, c_fontcolor
endif

# Logo bei Karten
if logo_file ne "" then
	place_logo
endif

# Rahmen
draw_frame frame_stroke_color, frame_line_style


###############################################################
###############################################################
###############################################################

print "-----------------------------------------"
print "End time = ", Mapyrus.time.stamp
print "-----------------------------------------"

endpage
