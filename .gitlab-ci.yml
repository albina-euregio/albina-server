image: maven:3-jdk-8

variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
    paths:
        - .m2/repository

production build:
    stage: build
    script:
        - apt-get update -y
        - apt-get install -y ghostscript imagemagick webp
        - git clone --depth 1 https://gitlab.com/albina-euregio/avalanche-warning-maps.git ../avalanche-warning-maps/
        - mvn $MAVEN_CLI_OPTS --activate-profiles env-prod install
    artifacts:
        when: always
        reports:
            junit:
                - target/surefire-reports/TEST-*.xml
                - target/failsafe-reports/TEST-*.xml

production build java 11:
    stage: build
    image: maven:3-jdk-11
    allow_failure: true
    script:
        - apt-get update -y
        - apt-get install -y ghostscript imagemagick webp
        - git clone --depth 1 https://gitlab.com/albina-euregio/avalanche-warning-maps.git ../avalanche-warning-maps/
        - mvn $MAVEN_CLI_OPTS --activate-profiles env-prod install
    artifacts:
        when: always
        reports:
            junit:
                - target/surefire-reports/TEST-*.xml
                - target/failsafe-reports/TEST-*.xml

deploy to development:
    stage: deploy
    script:
        - export TOMCAT_PATH=/albina_dev
        - export GIT_VERSION=$(git describe --tags)
        - mvn $MAVEN_CLI_OPTS --activate-profiles env-dev tomcat7:deploy
    environment:
        name: development
    only:
        - master
        - ci

deploy to production:
    stage: deploy
    script:
        - export TOMCAT_PATH=/albina
        - export GIT_VERSION=$(git describe --tags)
        - mvn $MAVEN_CLI_OPTS --activate-profiles env-prod tomcat7:deploy
    environment:
        name: production
    only:
        - tags
    when: manual
